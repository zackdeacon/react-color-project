{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/zackdeacon/code/react-color-project/colors-app/src/SingleColorPalette.js\";\nimport React, { Component } from 'react';\nimport ColorBox from \"./ColorBox\";\nimport Navbar from \"./Navbar\";\nimport PaletteFooter from \"./PaletteFooter\";\nimport { Link } from \"react-router-dom\";\nimport { withStyles } from \"@material-ui/styles\";\nconst styles = {\n  palette: {\n    height: '100vh',\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  paletteColors: {\n    height: '100%'\n  },\n  goBack: {\n    width: \"20%\",\n    height: \"50%\",\n    margin: \"0\",\n    display: \"inline-block\",\n    position: \"relative\",\n    cursor: \"pointer\",\n    marginBottom: \"-3.5px\",\n    opacity: 1,\n    backgroundColor: \"black\",\n    \"& a\": {\n      width: \"100px\",\n      height: \"30px\",\n      position: \"absolute\",\n      display: \"inline-block\",\n      top: \"50%\",\n      left: \"50%\",\n      marginLeft: \"-50px\",\n      marginTop: \"-15px\",\n      textAlign: \"center\",\n      outline: \"none\",\n      background: \"rgba(255, 255, 255, 0.3)\",\n      fontSize: \"1rem\",\n      lineHeight: '30px',\n      color: \"white\",\n      textTransform: 'uppercase',\n      border: 'none',\n      cursor: \"pointer\",\n      textDecoration: \"none\"\n    }\n  }\n};\n\nclass SingleColorPalette extends Component {\n  constructor(props) {\n    super(props);\n    this._shades = this.gatherShades(this.props.palette, this.props.colorId);\n    this.state = {\n      format: \"hex\"\n    };\n    this.changeFormat = this.changeFormat.bind(this);\n  }\n\n  gatherShades(palette, colorToFilterBy) {\n    let shades = [];\n    let allColors = palette.colors;\n\n    for (let key in allColors) {\n      shades = shades.concat(allColors[key].filter(color => color.id === colorToFilterBy));\n    }\n\n    return shades.slice(1);\n  }\n\n  changeFormat(val) {\n    this.setState({\n      format: val\n    });\n  }\n\n  render() {\n    const {\n      format\n    } = this.state;\n    const {\n      paletteName,\n      emoji,\n      id\n    } = this.props.palette;\n    const {\n      classes\n    } = this.props;\n\n    const colorBoxes = this._shades.map(color => /*#__PURE__*/_jsxDEV(ColorBox, {\n      name: color.name,\n      background: color[format],\n      showingFullPalette: false\n    }, color.name, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this));\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.palette,\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        handleChange: this.changeFormat,\n        showingAllColors: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.paletteColors,\n        children: [colorBoxes, /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.goBack,\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: `/palette/${id}`,\n            children: \"GO BACK\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(PaletteFooter, {\n        paletteName: paletteName,\n        emoji: emoji\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default withStyles(styles)(SingleColorPalette);","map":{"version":3,"sources":["/Users/zackdeacon/code/react-color-project/colors-app/src/SingleColorPalette.js"],"names":["React","Component","ColorBox","Navbar","PaletteFooter","Link","withStyles","styles","palette","height","display","flexDirection","paletteColors","goBack","width","margin","position","cursor","marginBottom","opacity","backgroundColor","top","left","marginLeft","marginTop","textAlign","outline","background","fontSize","lineHeight","color","textTransform","border","textDecoration","SingleColorPalette","constructor","props","_shades","gatherShades","colorId","state","format","changeFormat","bind","colorToFilterBy","shades","allColors","colors","key","concat","filter","id","slice","val","setState","render","paletteName","emoji","classes","colorBoxes","map","name"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport ColorBox from \"./ColorBox\"\nimport Navbar from \"./Navbar\"\nimport PaletteFooter from \"./PaletteFooter\"\nimport { Link } from \"react-router-dom\";\nimport { withStyles } from \"@material-ui/styles\";\n\n\nconst styles = {\n    palette: {\n        height: '100vh',\n        display: 'flex',\n        flexDirection: 'column'\n    },\n    paletteColors: {\n        height: '100%'\n    },\n    goBack: {\n        width: \"20%\",\n        height: \"50%\",\n        margin: \"0\",\n        display: \"inline-block\",\n        position: \"relative\",\n        cursor: \"pointer\",\n        marginBottom: \"-3.5px\",\n        opacity: 1,\n        backgroundColor: \"black\",\n        \"& a\": {\n            width: \"100px\",\n            height: \"30px\",\n            position: \"absolute\",\n            display: \"inline-block\",\n            top: \"50%\",\n            left: \"50%\",\n            marginLeft: \"-50px\",\n            marginTop: \"-15px\",\n            textAlign: \"center\",\n            outline: \"none\",\n            background: \"rgba(255, 255, 255, 0.3)\",\n            fontSize: \"1rem\",\n            lineHeight: '30px',\n            color: \"white\",\n            textTransform: 'uppercase',\n            border: 'none',\n            cursor: \"pointer\",\n            textDecoration: \"none\",\n        }\n    }\n}\n\nclass SingleColorPalette extends Component {\n    constructor(props){\n        super(props);\n        this._shades = this.gatherShades(this.props.palette, this.props.colorId);\n        this.state = { format: \"hex\" };\n        this.changeFormat = this.changeFormat.bind(this);\n    }\n    gatherShades(palette, colorToFilterBy) {\n        let shades = [];\n        let allColors = palette.colors;\n        for(let key in allColors) {\n            shades = shades.concat(\n                allColors[key].filter(color => color.id === colorToFilterBy)\n            );\n        }\n        return shades.slice(1);\n    }\n    changeFormat(val) {\n        this.setState({ format: val })\n    }\n    render() {\n        const {format} = this.state;\n        const { paletteName, emoji, id } = this.props.palette;\n        const { classes } = this.props;\n        const colorBoxes = this._shades.map(color => (\n            <ColorBox key={color.name} name={color.name} background={color[format]} showingFullPalette={false}/>\n        ));\n        return (\n            <div className={classes.palette}>\n                <Navbar handleChange={this.changeFormat} showingAllColors={false}/> \n                <div className = {classes.paletteColors}>\n                    {colorBoxes}\n                    <div className={classes.goBack}>\n                        <Link to={`/palette/${id}`}>GO BACK</Link>\n                        </div>\n                </div>\n                <PaletteFooter paletteName={paletteName} emoji={emoji}/>\n            </div>\n        )\n    }\n}\n\nexport default withStyles(styles)(SingleColorPalette);\n"]},"metadata":{},"sourceType":"module"}