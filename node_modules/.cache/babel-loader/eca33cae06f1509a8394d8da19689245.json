{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/zackdeacon/code/react-color-project/colors-app/src/PaletteFormNav.js\";\nimport React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\nimport PaletteMetaForm from \"./PaletteMetaForm\";\nimport classNames from \"classnames\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport { Button } from '@material-ui/core';\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport { withStyles } from \"@material-ui/core/styles\";\nconst drawerWidth = 400;\n\nconst styles = theme => ({\n  root: {\n    display: \"flex\"\n  },\n  appBar: {\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    height: \"64px\"\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  menuButton: {\n    marginLeft: 12,\n    marginRight: 20\n  },\n  navBtns: {\n    marginRight: \"1rem\",\n    \"& a\": {\n      textDecoration: \"none\"\n    }\n  },\n  button: {\n    margin: \"0 0.5rem\"\n  }\n});\n\nclass PaletteFormNav extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      newPaletteName: \"\",\n      formShowing: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.showForm = this.showForm.bind(this);\n    this.hideForm = this.hideForm.bind(this);\n  }\n\n  handleChange(evt) {\n    this.setState({\n      [evt.target.name]: evt.target.value\n    });\n  }\n\n  showForm() {\n    this.setState({\n      formShowing: true\n    });\n  }\n\n  hideForm() {\n    this.setState({\n      formShowing: false\n    });\n  }\n\n  render() {\n    const {\n      classes,\n      open,\n      palettes,\n      handleSubmit\n    } = this.props;\n    const {\n      newPaletteName\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.root,\n      children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(AppBar, {\n        position: \"fixed\",\n        color: \"default\",\n        className: classNames(classes.appBar, {\n          [classes.appBarShift]: open\n        }),\n        children: [/*#__PURE__*/_jsxDEV(Toolbar, {\n          disableGutters: !open,\n          children: [/*#__PURE__*/_jsxDEV(IconButton, {\n            color: \"inherit\",\n            \"aria-label\": \"Open drawer\",\n            onClick: this.props.handleDrawerOpen,\n            className: classNames(classes.menuButton, open && classes.hide),\n            children: /*#__PURE__*/_jsxDEV(MenuIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            color: \"inherit\",\n            noWrap: true,\n            children: \"Create a Palette\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.navBtns,\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: \"/\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              className: classes.button,\n              variant: \"contained\",\n              color: \"secondary\",\n              children: \"Go Back\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            className: classes.button,\n            color: \"primary\",\n            onClick: this.showForm,\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), this.state.formShowing && /*#__PURE__*/_jsxDEV(PaletteMetaForm, {\n        palettes: palettes,\n        handleSubmit: handleSubmit,\n        hideForm: this.hideForm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 44\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default withStyles(styles, {\n  withTheme: true\n})(PaletteFormNav);","map":{"version":3,"sources":["/Users/zackdeacon/code/react-color-project/colors-app/src/PaletteFormNav.js"],"names":["React","Component","Link","PaletteMetaForm","classNames","CssBaseline","AppBar","Toolbar","Typography","IconButton","MenuIcon","Button","ValidatorForm","TextValidator","withStyles","drawerWidth","styles","theme","root","display","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","flexDirection","justifyContent","alignItems","height","appBarShift","width","marginLeft","easeOut","enteringScreen","menuButton","marginRight","navBtns","textDecoration","button","margin","PaletteFormNav","constructor","props","state","newPaletteName","formShowing","handleChange","bind","showForm","hideForm","evt","setState","target","name","value","render","classes","open","palettes","handleSubmit","handleDrawerOpen","hide","withTheme"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\nimport PaletteMetaForm from \"./PaletteMetaForm\";\nimport classNames from \"classnames\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport { Button } from '@material-ui/core';\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst drawerWidth = 400;\n\nconst styles = theme => ({\n    root: {\n        display: \"flex\"\n    },\n    appBar: {\n        transition: theme.transitions.create([\"margin\", \"width\"], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen\n        }),\n        flexDirection: \"row\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\",\n        height: \"64px\"\n    },\n    appBarShift: {\n        width: `calc(100% - ${drawerWidth}px)`,\n        marginLeft: drawerWidth,\n        transition: theme.transitions.create([\"margin\", \"width\"], {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen\n        })\n    },\n    menuButton: {\n        marginLeft: 12,\n        marginRight: 20\n    },\n    navBtns: {\n        marginRight: \"1rem\",\n        \"& a\" : {\n        textDecoration: \"none\"\n        }\n    },\n    button: {\n        margin: \"0 0.5rem\",\n    }\n})\nclass PaletteFormNav extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            newPaletteName: \"\",\n            formShowing : false\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.showForm = this.showForm.bind(this);\n        this.hideForm = this.hideForm.bind(this);\n    }\n    handleChange(evt) {\n        this.setState({\n            [evt.target.name]: evt.target.value\n        });\n    }\n    showForm() {\n        this.setState({ formShowing : true })\n    }\n    hideForm() {\n        this.setState({\n            formShowing: false\n        })\n    }\n    render() {\n        const { classes, open, palettes, handleSubmit } = this.props;\n        const { newPaletteName } = this.state;\n        return (\n            <div className={classes.root}>\n                <CssBaseline />\n                <AppBar\n                    position='fixed'\n                    color=\"default\"\n                    className={classNames(classes.appBar, {\n                        [classes.appBarShift]: open\n                    })}>\n                    <Toolbar disableGutters={!open}>\n                        <IconButton\n                            color='inherit'\n                            aria-label='Open drawer'\n                            onClick={this.props.handleDrawerOpen}\n                            className={classNames(classes.menuButton, open && classes.hide)}>\n                            <MenuIcon />\n                        </IconButton>\n                        <Typography variant='h6' color='inherit' noWrap>\n                            Create a Palette\n                </Typography>\n                    </Toolbar>\n                    <div className={classes.navBtns}>\n                        <Link to=\"/\">\n                            <Button\n                            className = {classes.button}\n                                variant=\"contained\"\n                                color=\"secondary\">\n                                Go Back\n                                    </Button>\n                        </Link>\n                        <Button \n                        variant=\"contained\" \n                        className = {classes.button}\n                        color=\"primary\" \n                        onClick={this.showForm}>\n                    Save\n            </Button>\n                    </div>\n                </AppBar>\n                {this.state.formShowing && <PaletteMetaForm palettes = {palettes} handleSubmit = {handleSubmit} hideForm={this.hideForm}/>}\n            </div>\n        )\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(PaletteFormNav);\n"]},"metadata":{},"sourceType":"module"}