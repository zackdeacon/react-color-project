{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/zackdeacon/code/react-color-project/colors-app/src/Palette.js\";\nimport React, { Component } from 'react';\nimport ColorBox from \"./ColorBox\";\nimport \"./Palette.css\";\nimport { generatePalette } from \"./ColorHelpers\";\nimport Navbar from \"./Navbar\";\n\nclass Palette extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      level: 500\n    };\n    this.changeLevel = this.changeLevel.bind(this);\n    this.changeFormat = this.changeFormat.bind(this);\n  }\n\n  changeLevel(level) {\n    this.setState({\n      level\n    });\n  }\n\n  changeFormat(e) {\n    alert(e.target.value);\n  }\n\n  render() {\n    const {\n      colors\n    } = this.props.palette;\n    const {\n      level\n    } = this.state;\n    const colorBoxes = colors[level].map(color => /*#__PURE__*/_jsxDEV(ColorBox, {\n      background: color.hex,\n      name: color.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Palette\",\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        level: level,\n        changeLevel: this.changeLevel,\n        handleChange: this.changeFormat\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Palette-colors\",\n        children: colorBoxes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 16\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Palette;","map":{"version":3,"sources":["/Users/zackdeacon/code/react-color-project/colors-app/src/Palette.js"],"names":["React","Component","ColorBox","generatePalette","Navbar","Palette","constructor","props","state","level","changeLevel","bind","changeFormat","setState","e","alert","target","value","render","colors","palette","colorBoxes","map","color","hex","name"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAO,eAAP;AACA,SAASC,eAAT,QAAgC,gBAAhC;AACA,OAAOC,MAAP,MAAmB,UAAnB;;AAIA,MAAMC,OAAN,SAAsBJ,SAAtB,CAAgC;AAC5BK,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAAb;AACA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACH;;AAEDD,EAAAA,WAAW,CAACD,KAAD,EAAO;AACd,SAAKI,QAAL,CAAc;AAAEJ,MAAAA;AAAF,KAAd;AACH;;AAEDG,EAAAA,YAAY,CAACE,CAAD,EAAI;AACZC,IAAAA,KAAK,CAACD,CAAC,CAACE,MAAF,CAASC,KAAV,CAAL;AACH;;AAEDC,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA;AAAF,QAAa,KAAKZ,KAAL,CAAWa,OAA9B;AACA,UAAM;AAAEX,MAAAA;AAAF,QAAY,KAAKD,KAAvB;AACA,UAAMa,UAAU,GAAGF,MAAM,CAACV,KAAD,CAAN,CAAca,GAAd,CAAkBC,KAAK,iBACtC,QAAC,QAAD;AAAU,MAAA,UAAU,EAAEA,KAAK,CAACC,GAA5B;AAAiC,MAAA,IAAI,EAAED,KAAK,CAACE;AAA7C;AAAA;AAAA;AAAA;AAAA,YADe,CAAnB;AAGA,wBACI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,8BACI,QAAC,MAAD;AAAQ,QAAA,KAAK,EAAEhB,KAAf;AAAsB,QAAA,WAAW,EAAE,KAAKC,WAAxC;AAAqD,QAAA,YAAY,EAAE,KAAKE;AAAxE;AAAA;AAAA;AAAA;AAAA,cADJ,eAEG;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,kBACES;AADF;AAAA;AAAA;AAAA;AAAA,cAFH;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AASH;;AA/B2B;;AAkChC,eAAehB,OAAf","sourcesContent":["import React, { Component } from 'react'\nimport ColorBox from \"./ColorBox\"\nimport \"./Palette.css\"\nimport { generatePalette } from \"./ColorHelpers\";\nimport Navbar from \"./Navbar\"\n\n\n\nclass Palette extends Component {\n    constructor(props){\n        super(props);\n        this.state = { level: 500 };\n        this.changeLevel = this.changeLevel.bind(this);\n        this.changeFormat = this.changeFormat.bind(this);\n    }\n\n    changeLevel(level){\n        this.setState({ level });\n    }\n\n    changeFormat(e) {\n        alert(e.target.value);\n    }\n\n    render() {\n        const { colors } = this.props.palette;\n        const { level } = this.state;\n        const colorBoxes = colors[level].map(color => (\n            <ColorBox background={color.hex} name={color.name} /> \n        ));\n        return (\n            <div className=\"Palette\">\n                <Navbar level={level} changeLevel={this.changeLevel} handleChange={this.changeFormat}/>\n               <div className=\"Palette-colors\">\n                {colorBoxes}\n               </div>\n               {/* footer */}\n            </div>\n        )\n    }\n}\n\nexport default Palette; \n"]},"metadata":{},"sourceType":"module"}