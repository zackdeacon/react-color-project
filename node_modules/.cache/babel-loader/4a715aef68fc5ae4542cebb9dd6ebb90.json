{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/zackdeacon/code/react-color-project/colors-app/src/PaletteFormNav.js\";\nimport React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\nimport classNames from \"classnames\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport { Button } from '@material-ui/core';\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\n\nclass PaletteFormNav extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      newPaletteName: \"\"\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n    ValidatorForm.addValidationRule(\"isPaletteNameUnique\", value => this.props.palettes.every(({\n      paletteName\n    }) => paletteName.toLowerCase() !== value.toLowerCase()));\n  }\n\n  handleChange(evt) {\n    this.setState({\n      [evt.target.name]: evt.target.value\n    });\n  }\n\n  render() {\n    const {\n      classes,\n      open\n    } = this.props;\n    const {\n      newPaletteName\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(AppBar, {\n        position: \"fixed\",\n        color: \"default\",\n        className: classNames(classes.appBar, {\n          [classes.appBarShift]: open\n        }),\n        children: /*#__PURE__*/_jsxDEV(Toolbar, {\n          disableGutters: !open,\n          children: [/*#__PURE__*/_jsxDEV(IconButton, {\n            color: \"inherit\",\n            \"aria-label\": \"Open drawer\",\n            onClick: this.props.handleDrawerOpen,\n            className: classNames(classes.menuButton, open && classes.hide),\n            children: /*#__PURE__*/_jsxDEV(MenuIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            color: \"inherit\",\n            noWrap: true,\n            children: \"Persistent drawer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ValidatorForm, {\n            onSubmit: () => this.props.handleSubmit(newPaletteName),\n            children: [/*#__PURE__*/_jsxDEV(TextValidator, {\n              value: newPaletteName,\n              label: \"palette Name\",\n              name: \"newPaletteName\",\n              onChange: this.handleChange,\n              validators: [\"required\", \"isPaletteNameUnique\"],\n              errorMessage: [\"Enter A Palette Name\", \"Name Already Used\"]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"primary\",\n              type: \"submit\",\n              children: \"Save Palette\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                color: \"secondary\",\n                children: \"Go Back\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default PaletteFormNav;","map":{"version":3,"sources":["/Users/zackdeacon/code/react-color-project/colors-app/src/PaletteFormNav.js"],"names":["React","Component","Link","classNames","CssBaseline","AppBar","Toolbar","Typography","IconButton","MenuIcon","Button","ValidatorForm","TextValidator","PaletteFormNav","constructor","props","state","newPaletteName","handleChange","bind","componentDidMount","addValidationRule","value","palettes","every","paletteName","toLowerCase","evt","setState","target","name","render","classes","open","appBar","appBarShift","handleDrawerOpen","menuButton","hide","handleSubmit"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\nimport classNames from \"classnames\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport { Button } from '@material-ui/core';\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\n\nclass PaletteFormNav extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            newPaletteName: \"\"\n        }\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    componentDidMount() {\n        ValidatorForm.addValidationRule(\"isPaletteNameUnique\", value =>\n            this.props.palettes.every(\n                ({ paletteName }) => paletteName.toLowerCase() !== value.toLowerCase()\n            )\n        );\n    }\n    handleChange(evt) {\n        this.setState({\n            [evt.target.name]: evt.target.value\n        });\n    }\n    render() {\n        const { classes, open } = this.props;\n        const { newPaletteName } = this.state;\n        return (\n            <div>\n                <CssBaseline />\n                <AppBar\n                    position='fixed'\n                    color=\"default\"\n                    className={classNames(classes.appBar, {\n                        [classes.appBarShift]: open\n                    })}\n                >\n                    <Toolbar disableGutters={!open}>\n                        <IconButton\n                            color='inherit'\n                            aria-label='Open drawer'\n                            onClick={this.props.handleDrawerOpen}\n                            className={classNames(classes.menuButton, open && classes.hide)}\n                        >\n                        <MenuIcon />\n                        </IconButton>\n                        <Typography variant='h6' color='inherit' noWrap>\n                            Persistent drawer\n                </Typography>\n                        <ValidatorForm onSubmit={() => this.props.handleSubmit(newPaletteName)}>\n                            <TextValidator\n                                value={newPaletteName}\n                                label=\"palette Name\"\n                                name=\"newPaletteName\"\n                                onChange={this.handleChange}\n                                validators={[\"required\", \"isPaletteNameUnique\"]}\n                                errorMessage={[\"Enter A Palette Name\", \"Name Already Used\"]}\n                            />\n                            <Button variant=\"contained\" color=\"primary\" type=\"submit\">Save Palette</Button>\n                            <Link to=\"/\">\n                                <Button variant=\"contained\" color=\"secondary\">Go Back</Button>\n                            </Link>\n                        </ValidatorForm>\n                    </Toolbar>\n                </AppBar>\n\n            </div>\n        )\n    }\n}\n\nexport default PaletteFormNav;"]},"metadata":{},"sourceType":"module"}