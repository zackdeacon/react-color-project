{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/zackdeacon/code/react-color-project/colors-app/src/Navbar.js\";\nimport React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\nimport Slider from \"rc-slider\";\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport \"rc-slider/assets/index.css\";\nimport { withStyles } from \"@material-ui/styles\";\nconst styles = {\n  Navbar: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    height: '6vh'\n  },\n  Logo: {\n    marginRight: '15px',\n    padding: '0 13px',\n    fontSize: '22px',\n    backgroundColor: '#eceff1',\n    fontFamily: 'Roboto',\n    height: '100%',\n    display: 'flex',\n    alignItems: 'center',\n    \"& a\": {\n      textDecoration: 'none',\n      color: 'black'\n    }\n  },\n  Slider: {\n    width: '340px',\n    margin: '0 10px',\n    display: 'inline-block',\n    \"& .rc-slider-rail\": {\n      height: \"8px\"\n    },\n    \"& .rc-slider-track\": {\n      backgroundColor: \"transparent\"\n    },\n    \"& .rc-slider-handle, .rc-slider-handle:active, .rc-slider-handle:focus, .rc-slider-handle:hover\": {\n      backgroundColor: \"green\",\n      outline: \"none\",\n      border: \"2px solid green\",\n      boxShadow: \"none\",\n      width: \"13px\",\n      height: \"13px\",\n      marginLeft: \"-7px\",\n      marginTop: \"-3px\"\n    }\n  },\n  selectContainer: {\n    marginLeft: \"auto\",\n    marginLight: '1rem'\n  }\n};\n\nclass Navbar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      format: \"hex\",\n      open: false\n    };\n    this.handleFormatChange = this.handleFormatChange.bind(this);\n    this.closeSnackbar = this.closeSnackbar.bind(this);\n  }\n\n  handleFormatChange(e) {\n    this.setState({\n      format: e.target.value,\n      open: true\n    });\n    this.props.handleChange(e.target.value);\n  }\n\n  closeSnackbar() {\n    this.setState({\n      open: false\n    });\n  }\n\n  render() {\n    const {\n      level,\n      changeLevel,\n      showingAllColors,\n      classes\n    } = this.props;\n    const {\n      format,\n      open\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"header\", {\n      className: classes.Navbar,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.Logo,\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: \"reactcolorpicker\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this), showingAllColors && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\" Level: \", level]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.Slider,\n          children: /*#__PURE__*/_jsxDEV(Slider, {\n            defaultValue: level,\n            min: 100,\n            max: 900,\n            step: 100,\n            onAfterChange: changeLevel\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.selectContainer,\n        children: /*#__PURE__*/_jsxDEV(Select, {\n          value: format,\n          onChange: this.handleFormatChange,\n          children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"hex\",\n            children: \"HEX - #ffffff\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"rgb\",\n            children: \"RGB - rgb(255,255,255)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"rgba\",\n            children: \"RGBA - rgba(255,255,255, 1.0)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n        anchorOrigin: {\n          vertical: \"bottom\",\n          horizontal: \"left\"\n        },\n        open: open,\n        autoHideDuration: 3000,\n        message: /*#__PURE__*/_jsxDEV(\"span\", {\n          id: \"message-id\",\n          children: [\"Format Changed To \", format.toUpperCase(), \"!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 26\n        }, this),\n        ContentProps: {\n          \"aria-describedby\": \"message-id\"\n        },\n        onClose: this.closeSnackbar,\n        action: [/*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: this.closeSnackbar,\n          color: \"inherit\",\n          \"aria-label\": \"close\",\n          children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 25\n          }, this)\n        }, \"close\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this)]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default withStyle(styles)(Navbar);","map":{"version":3,"sources":["/Users/zackdeacon/code/react-color-project/colors-app/src/Navbar.js"],"names":["React","Component","Link","Slider","Select","MenuItem","Snackbar","CloseIcon","IconButton","withStyles","styles","Navbar","display","alignItems","justifyContent","height","Logo","marginRight","padding","fontSize","backgroundColor","fontFamily","textDecoration","color","width","margin","outline","border","boxShadow","marginLeft","marginTop","selectContainer","marginLight","constructor","props","state","format","open","handleFormatChange","bind","closeSnackbar","e","setState","target","value","handleChange","render","level","changeLevel","showingAllColors","classes","vertical","horizontal","toUpperCase","withStyle"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Link } from \"react-router-dom\";\nimport Slider from \"rc-slider\";\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport \"rc-slider/assets/index.css\";\nimport { withStyles } from \"@material-ui/styles\";\n\nconst styles = {\n    Navbar: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'flex-start',\n        height: '6vh'\n    },    \n    Logo: {\n        marginRight: '15px',\n        padding: '0 13px',\n        fontSize: '22px',\n        backgroundColor: '#eceff1',\n        fontFamily: 'Roboto',\n        height: '100%',\n        display: 'flex',\n        alignItems: 'center',\n        \"& a\": {\n            textDecoration: 'none',\n            color: 'black' \n        }\n    },    \n    Slider: {\n        width: '340px',\n        margin: '0 10px',\n        display: 'inline-block',\n        \"& .rc-slider-rail\": {\n            height: \"8px\"\n        },\n        \"& .rc-slider-track\": {\n            backgroundColor: \"transparent\"\n        },\n        \"& .rc-slider-handle, .rc-slider-handle:active, .rc-slider-handle:focus, .rc-slider-handle:hover\" : {\n            backgroundColor: \"green\",\n            outline: \"none\",\n            border: \"2px solid green\",\n            boxShadow: \"none\",\n            width: \"13px\",\n            height: \"13px\",\n            marginLeft: \"-7px\",\n            marginTop: \"-3px\"\n        }     \n    },\n    selectContainer : {\n        marginLeft: \"auto\",\n        marginLight: '1rem'\n    }\n}\n\nclass Navbar extends Component {\n    constructor(props){\n        super(props);\n        this.state = { format: \"hex\", open: false };\n        this.handleFormatChange = this.handleFormatChange.bind(this);\n        this.closeSnackbar = this.closeSnackbar.bind(this);\n    }\n    handleFormatChange(e) {\n        this.setState({ format: e.target.value, open: true });\n        this.props.handleChange(e.target.value);\n    }\n    closeSnackbar() {\n        this.setState({ open: false });\n    }\n    render() {\n        const { level, changeLevel, showingAllColors, classes } = this.props;\n        const { format, open } = this.state;\n        return (\n            <header className={classes.Navbar}>\n            <div className={classes.Logo}>\n                <Link to=\"/\">reactcolorpicker</Link>\n            </div>\n            {showingAllColors && (\n            <div>\n                <span> Level: {level}</span>\n            <div className={classes.Slider}>\n            <Slider \n                defaultValue={level} \n                min={100} \n                max={900}\n                step={100} \n                onAfterChange={changeLevel}\n                />\n                </div>\n                </div>\n            )}\n                <div className={classes.selectContainer}>\n                    <Select value={format} onChange={this.handleFormatChange}>\n                        <MenuItem value=\"hex\">HEX - #ffffff</MenuItem>\n                        <MenuItem value=\"rgb\">RGB - rgb(255,255,255)</MenuItem>\n                        <MenuItem value=\"rgba\">RGBA - rgba(255,255,255, 1.0)</MenuItem>\n                    </Select>\n                </div>\n                <Snackbar \n                anchorOrigin={{ vertical: \"bottom\", horizontal: \"left\" }} \n                open={open}\n                autoHideDuration={3000}\n                message={<span id=\"message-id\">Format Changed To {format.toUpperCase()}!</span>}\n                ContentProps={{ \"aria-describedby\": \"message-id\"}}\n                onClose={this.closeSnackbar}\n                action={[\n                    <IconButton onClick={this.closeSnackbar} color=\"inherit\" key=\"close\" aria-label=\"close\"> \n                        <CloseIcon /> \n                    </IconButton>\n                ]}\n                />\n            </header>\n        )\n    }\n}\n\nexport default withStyle(styles)(Navbar);\n"]},"metadata":{},"sourceType":"module"}