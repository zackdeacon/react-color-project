{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/zackdeacon/code/react-color-project/colors-app/src/NewPaletteForm.js\";\nimport React, { Component } from 'react';\nimport classNames from \"classnames\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport { ChromePicker } from \"react-color\";\nimport { Button, colors } from '@material-ui/core';\nconst drawerWidth = 400;\n\nconst styles = theme => ({\n  root: {\n    display: \"flex\"\n  },\n  appBar: {\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  menuButton: {\n    marginLeft: 12,\n    marginRight: 20\n  },\n  hide: {\n    display: \"none\"\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0\n  },\n  drawerPaper: {\n    width: drawerWidth\n  },\n  drawerHeader: {\n    display: \"flex\",\n    alignItems: \"center\",\n    padding: \"0 8px\",\n    ...theme.mixins.toolbar,\n    justifyContent: \"flex-end\"\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing.unit * 3,\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    marginLeft: -drawerWidth\n  },\n  contentShift: {\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    }),\n    marginLeft: 0\n  }\n});\n\nclass NewPaletteForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleDrawerOpen = () => {\n      this.setState({\n        open: true\n      });\n    };\n\n    this.handleDrawerClose = () => {\n      this.setState({\n        open: false\n      });\n    };\n\n    this.state = {\n      open: true,\n      currentColor: \"teal\",\n      colors: [\"purple\", \"#e87354\"]\n    };\n    this.updateCurrentColor = this.updateCurrentColor.bind(this);\n    this.addNewColor = this.addNewColor.bind(this);\n  }\n\n  updateCurrentColor(newColor) {\n    this.setState({\n      currentColor: newColor.hex\n    });\n  }\n\n  addNewColor() {\n    this.setState({\n      colors: [...this.state.colors, this.state.currentColor]\n    });\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    const {\n      open\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.root,\n      children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(AppBar, {\n        position: \"fixed\",\n        className: classNames(classes.appBar, {\n          [classes.appBarShift]: open\n        }),\n        children: /*#__PURE__*/_jsxDEV(Toolbar, {\n          disableGutters: !open,\n          children: [/*#__PURE__*/_jsxDEV(IconButton, {\n            color: \"inherit\",\n            \"aria-label\": \"Open drawer\",\n            onClick: this.handleDrawerOpen,\n            className: classNames(classes.menuButton, open && classes.hide),\n            children: /*#__PURE__*/_jsxDEV(MenuIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            color: \"inherit\",\n            noWrap: true,\n            children: \"Persistent drawer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Drawer, {\n        className: classes.drawer,\n        variant: \"persistent\",\n        anchor: \"left\",\n        open: open,\n        classes: {\n          paper: classes.drawerPaper\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.drawerHeader,\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            onClick: this.handleDrawerClose,\n            children: /*#__PURE__*/_jsxDEV(ChevronLeftIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          children: \"Design your palette!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"secondary\",\n            children: \"Clear Palette\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            children: \"Random Color\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ChromePicker, {\n          color: this.state.currentColor,\n          onChangeComplete: this.updateCurrentColor\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          style: {\n            backgroundColor: this.state.currentColor\n          },\n          onClick: this.addNewColor,\n          children: \"Add Color\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: classNames(classes.content, {\n          [classes.contentShift]: open\n        }),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.drawerHeader\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: this.state.colors.map(color => /*#__PURE__*/_jsxDEV(\"li\", {\n            style: {\n              backgroundColor: color\n            },\n            children: color\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default withStyles(styles, {\n  withTheme: true\n})(NewPaletteForm);","map":{"version":3,"sources":["/Users/zackdeacon/code/react-color-project/colors-app/src/NewPaletteForm.js"],"names":["React","Component","classNames","withStyles","Drawer","CssBaseline","AppBar","Toolbar","Typography","Divider","IconButton","MenuIcon","ChevronLeftIcon","ChromePicker","Button","colors","drawerWidth","styles","theme","root","display","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","width","marginLeft","easeOut","enteringScreen","menuButton","marginRight","hide","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","padding","mixins","toolbar","justifyContent","content","flexGrow","spacing","unit","contentShift","NewPaletteForm","constructor","props","handleDrawerOpen","setState","open","handleDrawerClose","state","currentColor","updateCurrentColor","bind","addNewColor","newColor","hex","render","classes","paper","backgroundColor","map","color","withTheme"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,eAAP,MAA4B,gCAA5B;AACA,SAASC,YAAT,QAA6B,aAA7B;AACA,SAASC,MAAT,EAAiBC,MAAjB,QAA+B,mBAA/B;AAEA,MAAMC,WAAW,GAAG,GAApB;;AAEA,MAAMC,MAAM,GAAGC,KAAK,KAAK;AACrBC,EAAAA,IAAI,EAAE;AACFC,IAAAA,OAAO,EAAE;AADP,GADe;AAIrBC,EAAAA,MAAM,EAAE;AACJC,IAAAA,UAAU,EAAEJ,KAAK,CAACK,WAAN,CAAkBC,MAAlB,CAAyB,CAAC,QAAD,EAAW,OAAX,CAAzB,EAA8C;AACtDC,MAAAA,MAAM,EAAEP,KAAK,CAACK,WAAN,CAAkBE,MAAlB,CAAyBC,KADqB;AAEtDC,MAAAA,QAAQ,EAAET,KAAK,CAACK,WAAN,CAAkBI,QAAlB,CAA2BC;AAFiB,KAA9C;AADR,GAJa;AAUrBC,EAAAA,WAAW,EAAE;AACTC,IAAAA,KAAK,EAAG,eAAcd,WAAY,KADzB;AAETe,IAAAA,UAAU,EAAEf,WAFH;AAGTM,IAAAA,UAAU,EAAEJ,KAAK,CAACK,WAAN,CAAkBC,MAAlB,CAAyB,CAAC,QAAD,EAAW,OAAX,CAAzB,EAA8C;AACtDC,MAAAA,MAAM,EAAEP,KAAK,CAACK,WAAN,CAAkBE,MAAlB,CAAyBO,OADqB;AAEtDL,MAAAA,QAAQ,EAAET,KAAK,CAACK,WAAN,CAAkBI,QAAlB,CAA2BM;AAFiB,KAA9C;AAHH,GAVQ;AAkBrBC,EAAAA,UAAU,EAAE;AACRH,IAAAA,UAAU,EAAE,EADJ;AAERI,IAAAA,WAAW,EAAE;AAFL,GAlBS;AAsBrBC,EAAAA,IAAI,EAAE;AACFhB,IAAAA,OAAO,EAAE;AADP,GAtBe;AAyBrBiB,EAAAA,MAAM,EAAE;AACJP,IAAAA,KAAK,EAAEd,WADH;AAEJsB,IAAAA,UAAU,EAAE;AAFR,GAzBa;AA6BrBC,EAAAA,WAAW,EAAE;AACTT,IAAAA,KAAK,EAAEd;AADE,GA7BQ;AAgCrBwB,EAAAA,YAAY,EAAE;AACVpB,IAAAA,OAAO,EAAE,MADC;AAEVqB,IAAAA,UAAU,EAAE,QAFF;AAGVC,IAAAA,OAAO,EAAE,OAHC;AAIV,OAAGxB,KAAK,CAACyB,MAAN,CAAaC,OAJN;AAKVC,IAAAA,cAAc,EAAE;AALN,GAhCO;AAuCrBC,EAAAA,OAAO,EAAE;AACLC,IAAAA,QAAQ,EAAE,CADL;AAELL,IAAAA,OAAO,EAAExB,KAAK,CAAC8B,OAAN,CAAcC,IAAd,GAAqB,CAFzB;AAGL3B,IAAAA,UAAU,EAAEJ,KAAK,CAACK,WAAN,CAAkBC,MAAlB,CAAyB,QAAzB,EAAmC;AAC3CC,MAAAA,MAAM,EAAEP,KAAK,CAACK,WAAN,CAAkBE,MAAlB,CAAyBC,KADU;AAE3CC,MAAAA,QAAQ,EAAET,KAAK,CAACK,WAAN,CAAkBI,QAAlB,CAA2BC;AAFM,KAAnC,CAHP;AAOLG,IAAAA,UAAU,EAAE,CAACf;AAPR,GAvCY;AAgDrBkC,EAAAA,YAAY,EAAE;AACV5B,IAAAA,UAAU,EAAEJ,KAAK,CAACK,WAAN,CAAkBC,MAAlB,CAAyB,QAAzB,EAAmC;AAC3CC,MAAAA,MAAM,EAAEP,KAAK,CAACK,WAAN,CAAkBE,MAAlB,CAAyBO,OADU;AAE3CL,MAAAA,QAAQ,EAAET,KAAK,CAACK,WAAN,CAAkBI,QAAlB,CAA2BM;AAFM,KAAnC,CADF;AAKVF,IAAAA,UAAU,EAAE;AALF;AAhDO,CAAL,CAApB;;AAwDA,MAAMoB,cAAN,SAA6BlD,SAA7B,CAAuC;AACnCmD,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAWlBC,gBAXkB,GAWC,MAAM;AACrB,WAAKC,QAAL,CAAc;AAAEC,QAAAA,IAAI,EAAE;AAAR,OAAd;AACH,KAbiB;;AAAA,SAclBC,iBAdkB,GAcE,MAAM;AACtB,WAAKF,QAAL,CAAc;AAAEC,QAAAA,IAAI,EAAE;AAAR,OAAd;AACH,KAhBiB;;AAEd,SAAKE,KAAL,GAAa;AACTF,MAAAA,IAAI,EAAE,IADG;AAETG,MAAAA,YAAY,EAAE,MAFL;AAGT5C,MAAAA,MAAM,EAAE,CAAC,QAAD,EAAW,SAAX;AAHC,KAAb;AAKA,SAAK6C,kBAAL,GAA0B,KAAKA,kBAAL,CAAwBC,IAAxB,CAA6B,IAA7B,CAA1B;AACA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBD,IAAjB,CAAsB,IAAtB,CAAnB;AACH;;AAQDD,EAAAA,kBAAkB,CAACG,QAAD,EAAW;AACzB,SAAKR,QAAL,CAAc;AAAEI,MAAAA,YAAY,EAAGI,QAAQ,CAACC;AAA1B,KAAd;AACH;;AACDF,EAAAA,WAAW,GAAG;AACV,SAAKP,QAAL,CAAc;AAAExC,MAAAA,MAAM,EAAE,CAAC,GAAG,KAAK2C,KAAL,CAAW3C,MAAf,EAAuB,KAAK2C,KAAL,CAAWC,YAAlC;AAAV,KAAd;AACH;;AACDM,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA;AAAF,QAAc,KAAKb,KAAzB;AACA,UAAM;AAAEG,MAAAA;AAAF,QAAW,KAAKE,KAAtB;AACA,wBACI;AAAK,MAAA,SAAS,EAAEQ,OAAO,CAAC/C,IAAxB;AAAA,8BACI,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,MAAD;AACI,QAAA,QAAQ,EAAC,OADb;AAEI,QAAA,SAAS,EAAEjB,UAAU,CAACgE,OAAO,CAAC7C,MAAT,EAAiB;AAClC,WAAC6C,OAAO,CAACrC,WAAT,GAAuB2B;AADW,SAAjB,CAFzB;AAAA,+BAMI,QAAC,OAAD;AAAS,UAAA,cAAc,EAAE,CAACA,IAA1B;AAAA,kCACI,QAAC,UAAD;AACI,YAAA,KAAK,EAAC,SADV;AAEI,0BAAW,aAFf;AAGI,YAAA,OAAO,EAAE,KAAKF,gBAHlB;AAII,YAAA,SAAS,EAAEpD,UAAU,CAACgE,OAAO,CAAChC,UAAT,EAAqBsB,IAAI,IAAIU,OAAO,CAAC9B,IAArC,CAJzB;AAAA,mCAMI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AANJ;AAAA;AAAA;AAAA;AAAA,kBADJ,eASI,QAAC,UAAD;AAAY,YAAA,OAAO,EAAC,IAApB;AAAyB,YAAA,KAAK,EAAC,SAA/B;AAAyC,YAAA,MAAM,MAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AANJ;AAAA;AAAA;AAAA;AAAA,cAFJ,eAsBI,QAAC,MAAD;AACI,QAAA,SAAS,EAAE8B,OAAO,CAAC7B,MADvB;AAEI,QAAA,OAAO,EAAC,YAFZ;AAGI,QAAA,MAAM,EAAC,MAHX;AAII,QAAA,IAAI,EAAEmB,IAJV;AAKI,QAAA,OAAO,EAAE;AACLW,UAAAA,KAAK,EAAED,OAAO,CAAC3B;AADV,SALb;AAAA,gCASI;AAAK,UAAA,SAAS,EAAE2B,OAAO,CAAC1B,YAAxB;AAAA,iCACI,QAAC,UAAD;AAAY,YAAA,OAAO,EAAE,KAAKiB,iBAA1B;AAAA,mCACI,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBATJ,eAcI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,gBAdJ,eAeI,QAAC,UAAD;AAAY,UAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAfJ,eAgBI;AAAA,kCACA,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAC,WAAhB;AAA4B,YAAA,KAAK,EAAC,WAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADA,eAEA,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAC,WAAhB;AAA4B,YAAA,KAAK,EAAC,SAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAhBJ,eAoBI,QAAC,YAAD;AACA,UAAA,KAAK,EAAE,KAAKC,KAAL,CAAWC,YADlB;AAEA,UAAA,gBAAgB,EAAE,KAAKC;AAFvB;AAAA;AAAA;AAAA;AAAA,gBApBJ,eAwBI,QAAC,MAAD;AACA,UAAA,OAAO,EAAC,WADR;AAEA,UAAA,KAAK,EAAC,SAFN;AAGA,UAAA,KAAK,EAAE;AAACQ,YAAAA,eAAe,EAAC,KAAKV,KAAL,CAAWC;AAA5B,WAHP;AAIA,UAAA,OAAO,EAAI,KAAKG,WAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAxBJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAtBJ,eAqDI;AACI,QAAA,SAAS,EAAE5D,UAAU,CAACgE,OAAO,CAACpB,OAAT,EAAkB;AACnC,WAACoB,OAAO,CAAChB,YAAT,GAAwBM;AADW,SAAlB,CADzB;AAAA,gCAKI;AAAK,UAAA,SAAS,EAAEU,OAAO,CAAC1B;AAAxB;AAAA;AAAA;AAAA;AAAA,gBALJ,eAMI;AAAA,oBACK,KAAKkB,KAAL,CAAW3C,MAAX,CAAkBsD,GAAlB,CAAsBC,KAAK,iBACxB;AAAI,YAAA,KAAK,EAAE;AAACF,cAAAA,eAAe,EAAEE;AAAlB,aAAX;AAAA,sBAAsCA;AAAtC;AAAA;AAAA;AAAA;AAAA,kBADH;AADL;AAAA;AAAA;AAAA;AAAA,gBANJ;AAAA;AAAA;AAAA;AAAA;AAAA,cArDJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAoEH;;AA/FkC;;AAkGvC,eAAenE,UAAU,CAACc,MAAD,EAAS;AAAEsD,EAAAA,SAAS,EAAE;AAAb,CAAT,CAAV,CAAwCpB,cAAxC,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport classNames from \"classnames\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport { ChromePicker } from \"react-color\";\nimport { Button, colors } from '@material-ui/core';\n\nconst drawerWidth = 400;\n\nconst styles = theme => ({\n    root: {\n        display: \"flex\"\n    },\n    appBar: {\n        transition: theme.transitions.create([\"margin\", \"width\"], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen\n        })\n    },\n    appBarShift: {\n        width: `calc(100% - ${drawerWidth}px)`,\n        marginLeft: drawerWidth,\n        transition: theme.transitions.create([\"margin\", \"width\"], {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen\n        })\n    },\n    menuButton: {\n        marginLeft: 12,\n        marginRight: 20\n    },\n    hide: {\n        display: \"none\"\n    },\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0\n    },\n    drawerPaper: {\n        width: drawerWidth\n    },\n    drawerHeader: {\n        display: \"flex\",\n        alignItems: \"center\",\n        padding: \"0 8px\",\n        ...theme.mixins.toolbar,\n        justifyContent: \"flex-end\"\n    },\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing.unit * 3,\n        transition: theme.transitions.create(\"margin\", {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen\n        }),\n        marginLeft: -drawerWidth\n    },\n    contentShift: {\n        transition: theme.transitions.create(\"margin\", {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen\n        }),\n        marginLeft: 0\n    }\n});\nclass NewPaletteForm extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            open: true,\n            currentColor: \"teal\",\n            colors: [\"purple\", \"#e87354\"]\n        }\n        this.updateCurrentColor = this.updateCurrentColor.bind(this);\n        this.addNewColor = this.addNewColor.bind(this);\n    }\n  \n    handleDrawerOpen = () => {\n        this.setState({ open: true });\n    };\n    handleDrawerClose = () => {\n        this.setState({ open: false });\n    };\n    updateCurrentColor(newColor) {\n        this.setState({ currentColor : newColor.hex })\n    }\n    addNewColor() {\n        this.setState({ colors: [...this.state.colors, this.state.currentColor] })\n    }\n    render() {\n        const { classes } = this.props;\n        const { open } = this.state;\n        return (\n            <div className={classes.root}>\n                <CssBaseline />\n                <AppBar\n                    position='fixed'\n                    className={classNames(classes.appBar, {\n                        [classes.appBarShift]: open\n                    })}\n                >\n                    <Toolbar disableGutters={!open}>\n                        <IconButton\n                            color='inherit'\n                            aria-label='Open drawer'\n                            onClick={this.handleDrawerOpen}\n                            className={classNames(classes.menuButton, open && classes.hide)}\n                        >\n                            <MenuIcon />\n                        </IconButton>\n                        <Typography variant='h6' color='inherit' noWrap>\n                            Persistent drawer\n                </Typography>\n                    </Toolbar>\n                </AppBar>\n                <Drawer\n                    className={classes.drawer}\n                    variant='persistent'\n                    anchor='left'\n                    open={open}\n                    classes={{\n                        paper: classes.drawerPaper\n                    }}\n                >\n                    <div className={classes.drawerHeader}>\n                        <IconButton onClick={this.handleDrawerClose}>\n                            <ChevronLeftIcon />\n                        </IconButton>\n                    </div>\n                    <Divider />\n                    <Typography variant=\"h4\">Design your palette!</Typography>\n                    <div>\n                    <Button variant=\"contained\" color=\"secondary\">Clear Palette</Button>\n                    <Button variant=\"contained\" color=\"primary\">Random Color</Button>\n                    </div>\n                    <ChromePicker \n                    color={this.state.currentColor} \n                    onChangeComplete={this.updateCurrentColor}\n                    />\n                    <Button \n                    variant=\"contained\" \n                    color=\"primary\" \n                    style={{backgroundColor:this.state.currentColor}}\n                    onClick = {this.addNewColor}\n                    >Add Color</Button>\n                </Drawer>\n                <main\n                    className={classNames(classes.content, {\n                        [classes.contentShift]: open\n                    })}\n                >\n                    <div className={classes.drawerHeader} />\n                    <ul>\n                        {this.state.colors.map(color=> (\n                            <li style={{backgroundColor: color}}>{color}</li>\n                        ))}\n                    </ul>\n                </main>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(NewPaletteForm);\n"]},"metadata":{},"sourceType":"module"}